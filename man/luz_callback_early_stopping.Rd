% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/callbacks.R
\name{luz_callback_early_stopping}
\alias{luz_callback_early_stopping}
\title{Early stopping callback}
\usage{
luz_callback_early_stopping(
  monitor = "valid_loss",
  min_delta = 0,
  patience = 0,
  verbose = FALSE,
  mode = "min",
  baseline = NULL
)
}
\arguments{
\item{monitor}{A string in the format \verb{<set>_<metric>} where \verb{<set>} can be
'train' or 'valid' and \verb{<metric>} can be the abbreviation of any metric
that you are tracking during training.}

\item{min_delta}{Minimum improvement to reset the patience counter.}

\item{patience}{Number of epochs without improving until stoping training.}

\item{verbose}{If \code{TRUE} a message will be printed when early stopping occurs.}

\item{mode}{Specifies the direction that is considered an improvement. By default
'min' is used. Can also be 'max' (higher is better) and 'zero'
(closer to zero is better).}

\item{baseline}{An initial value that will be used as the best seen value
in the begining. Model will stopm training if no better than baseline value
is found in the first \code{patience} epochs.}
}
\value{
A \code{luz_callback} that does early stopping.
}
\description{
Stops training when a monitored metric stops improving
}
\examples{
cb <- luz_callback_early_stopping()

}
\seealso{
Other luz_callbacks: 
\code{\link{luz_callback_metrics}()},
\code{\link{luz_callback_progress}()},
\code{\link{luz_callback_train_valid}()},
\code{\link{luz_callback}()}
}
\concept{luz_callbacks}
